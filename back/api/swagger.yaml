---
swagger: "2.0"
info:
  description: "API for videoStream REST Server"
  version: "0.0.0"
  title: "videoStream REST API"
#host: "localhost:1337"
host: "192.168.1.78:1337"
basePath: "/"
schemes:
- "http"
produces:
- "application/json"
paths:
  /:
    get:
      tags:
      - "public"
      summary: "nothing"
      description: "just to see if server is awake.\n"
      operationId: "rootGET"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "good evening... string"
          schema:
            type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/inline_response_default"
      x-swagger-router-controller: "Public"
  /getVideoList:
    get:
      tags:
      - "public"
      summary: "list available videos"
      description: "array of strings with video titles"
      operationId: "getVideoListGET"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "video list"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/inline_response_default"
      x-swagger-router-controller: "Public"
  /getVideoSubs:
    get:
      tags:
      - "public"
      summary: "get subtitles for video"
      description: "array of strings with video titles"
      operationId: "getVideoSubsGET"
      produces:
      - "application/json"
      parameters:
      - name: "videoId"
        in: "query"
        description: "the video id"
        required: true
        type: integer
      responses:
        200:
          description: "video subs"
          schema:
            type: "array"
            items:
              type: "string"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/inline_response_default"
      x-swagger-router-controller: "Public"
  /getWatchVideo:
    get:
      tags:
      - "public"
      summary: "watch a video"
      description: "get a video stream"
      operationId: "getWatchVideoGET"
      produces:
      - "application/json"
      parameters:
      - name: "videoId"
        in: "query"
        description: "the video id"
        required: true
        type: integer
      responses:
        200:
          description: "video list"
          schema:
            type: "object"
            properties: {}
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/inline_response_default"
      x-swagger-router-controller: "Public"
  /setVideoThing:
    post:
      tags:
      - "public"
      summary: "Set Pic For Existing Video"
      description: ""
      operationId: "setVideoThingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Thing definition object"
        required: true
        schema:
          $ref: "#/definitions/single_String"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/OK_res"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Public"
  /refreshVideoList:
    post:
      tags:
      - "public"
      summary: "Refresh Video List"
      description: ""
      operationId: "refreshVideoListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/OK_res"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Public"
definitions:
  videoList:
    type: "array"
    items:
      type: "string"
  videoStream:
    type: "object"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
  inline_response_default:
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
  single_String:
    type: object
    properties:
      id:
        type: integer
      string:
        type: string
      thing:
        type: string
  OK_res:
    type: object
    properties:
      result:
        type: string
        default: 'success'
